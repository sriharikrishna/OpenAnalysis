
/* ReachingDefsStandard.cpp
   NOTE: This file was automatically generated by DFAGen.  It is the
         implementation of the class for ReachingDefs analysis results.
*/


#include "auto_ReachingDefsStandard.hpp"

namespace OA {
  namespace ReachingDefs {


ReachingDefsDFSet::iterator ReachingDefsStandard::getReachingDefsIterator(StmtHandle s) {
    ReachingDefsDFSet::iterator retval;

    if(mReachingDefs[s].ptrEqual(0)) {
        mReachingDefs[s] = new ReachingDefsDFSet();
    }

    retval = mReachingDefs[s]->begin();

    return retval;
}


ReachingDefsDFSet::iterator ReachingDefsStandard::getExitReachingDefsIterator() {
    ReachingDefsDFSet::iterator retval;

    retval = mExitReachingDefs->begin();
    return retval;
}


void ReachingDefsStandard::output(IRHandlesIRInterface& ir) {
#if 0
    sOutBuild->objStart("ReachingDefsStandard");

    sOutBuild->mapStart("mReachingDefs", "StmtHandle", "OA_ptr<LocSet>");
    std::map<StmtHandle,OA_ptr<LocSet> >::iterator mapIter;
    for (mapIter = mReachingDefs.begin(); mapIter != mReachingDefs.end(); mapIter++) {
        StmtHandle s = mapIter->first;
        OA_ptr<LocSet> rdset = mapIter->second;
        if ( rdset.ptrEqual(0) ) continue;

        sOutBuild->mapEntryStart();
        sOutBuild->mapKeyStart();
        sOutBuild->outputIRHandle(s, ir);
        sOutBuild->mapKeyEnd();
        sOutBuild->mapValueStart();


        sOutBuild->listStart();
        OA_ptr<".TYPEITER."> setIter;
        setIter = getReachingDefsIterator(s);
        for ( ; setIter->isValid(); (*setIter)++ ) {
             sOutBuild->listItemStart(); {
             setIter->current()->output(ir);
            } sOutBuild->listItemEnd();
        }
        sOutBuild->listEnd();
        sOutBuild->mapValueEnd();
        sOutBuild->mapEntryEnd();
    }
    sOutBuild->mapEnd("mReachingDefs");
    sOutBuild->objEnd("ReachingDefsStandard");
#endif
}


void ReachingDefsStandard::dump(std::ostream& os, OA_ptr<IRHandlesIRInterface> ir)
{
    std::cout << "======ReachingDefs===="<< std::endl;
    ReachingDefsDFSet::iterator iter;

    std::map<StmtHandle, OA_ptr<ReachingDefsDFSet> >::iterator mapIter;

    for (mapIter = mReachingDefs.begin(); mapIter != mReachingDefs.end(); mapIter++) {
        std::cout<< "\tstmt = " << ir->toString(mapIter->first) << std::endl;
        iter = getReachingDefsIterator(mapIter->first);

        for ( ; iter != mReachingDefs[mapIter->first]->end(); iter++ ) {
            std::cout << "\t\t";
        cout << mIR->toString(*iter);
            std::cout << std::endl;
        }
    }
}


  } // end of ReachingDefs namespace
} // end of OA namespace
