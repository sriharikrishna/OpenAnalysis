// /!\ ATTENTION:
//
//     THIS IS AN AUTOMATICALLY GENERATED FILE
//     CREATED BY GenOutputTool.
//     DO NOT EDIT THIS FILE DIRECTLY AS IT WILL
//     BE OVERWRITTEN.

#include "SideEffectStandard.hpp"

namespace OA { 
    namespace SideEffect { 

        void SideEffectStandard::output(OA::IRHandlesIRInterface &ir)
        {
            sOutBuild->objStart("SideEffectStandard");
	 
   	    sOutBuild->fieldStart("mLMODSet");
	    sOutBuild->listStart();
	    LocSetIterator LMODlocIter(mLMODSet);
	    for (; LMODlocIter.isValid(); ++LMODlocIter) {
	        OA_ptr<Location> loc = LMODlocIter.current();
	        sOutBuild->listItemStart();
	        loc->output(ir);
	        sOutBuild->listItemEnd();
	    }
	    sOutBuild->listEnd();
            sOutBuild->fieldEnd("mLMODSet");
	    
	    
            sOutBuild->fieldStart("mMODSet");
            sOutBuild->listStart();
	    LocSetIterator MODlocIter(mMODSet);
	    for (; MODlocIter.isValid(); ++MODlocIter) {
	         OA_ptr<Location> loc = MODlocIter.current();
	         sOutBuild->listItemStart();
	         loc->output(ir);
	         sOutBuild->listItemEnd();
	    }
	    sOutBuild->listEnd();
	    sOutBuild->fieldEnd("mMODSet");
	     
	     		
            sOutBuild->fieldStart("mLDEFSet");
	    sOutBuild->listStart();
	    LocSetIterator LDEFlocIter(mLDEFSet);
	    for (; LDEFlocIter.isValid(); ++LDEFlocIter) {
	         OA_ptr<Location> loc = LDEFlocIter.current();
	         sOutBuild->listItemStart();
	         loc->output(ir);
	         sOutBuild->listItemEnd();
	     }
	     sOutBuild->listEnd();
	     sOutBuild->fieldEnd("mLDEFSet");
	      
	
             sOutBuild->fieldStart("mDEFSet");
	     sOutBuild->listStart();
	     LocSetIterator DEFlocIter(mDEFSet);
	     for (; DEFlocIter.isValid(); ++DEFlocIter) {
	         OA_ptr<Location> loc = DEFlocIter.current();
	         sOutBuild->listItemStart();
	         loc->output(ir);
	         sOutBuild->listItemEnd();
	     }
	     sOutBuild->listEnd();
	     sOutBuild->fieldEnd("mDEFSet");
	      
						  
	     sOutBuild->fieldStart("mLUSESet");
             sOutBuild->listStart();
	     LocSetIterator LUSElocIter(mLUSESet);
	     for (; LUSElocIter.isValid(); ++LUSElocIter) {
	          OA_ptr<Location> loc = LUSElocIter.current();
	          sOutBuild->listItemStart();
	          loc->output(ir);
	          sOutBuild->listItemEnd();
	      }
	      sOutBuild->listEnd();
	      sOutBuild->fieldEnd("mLUSESet");
	       

	      sOutBuild->fieldStart("mUSESet");
          sOutBuild->listStart();
          LocSetIterator USElocIter(mUSESet);
	      for (; USElocIter.isValid(); ++USElocIter) {
	           OA_ptr<Location> loc = USElocIter.current();
	           sOutBuild->listItemStart();
	           loc->output(ir);
	           sOutBuild->listItemEnd();
	      }
	      sOutBuild->listEnd();
	      sOutBuild->fieldEnd("mUSESet");
	       
	
              sOutBuild->fieldStart("mLREFSet");
	      sOutBuild->listStart();
	      LocSetIterator LREFlocIter(mLREFSet);
	      for (; LREFlocIter.isValid(); ++LREFlocIter) {
	            OA_ptr<Location> loc = LREFlocIter.current();
	            sOutBuild->listItemStart();
	            loc->output(ir);
	            sOutBuild->listItemEnd();
	      }
	      sOutBuild->listEnd();
	      sOutBuild->fieldEnd("mLREFSet");
	   			 
	     
	      sOutBuild->fieldStart("mREFSet");
              sOutBuild->listStart();
	      LocSetIterator REFlocIter(mREFSet);
	      for (; REFlocIter.isValid(); ++REFlocIter) {
	             OA_ptr<Location> loc = REFlocIter.current();
	             sOutBuild->listItemStart();
	             loc->output(ir);
	             sOutBuild->listItemEnd();
	      }
	      sOutBuild->listEnd();
	      sOutBuild->fieldEnd("mREFSet");
	      
	      sOutBuild->fieldStart("mUnknownLocSet");
	      sOutBuild->listStart();
	      LocSetIterator UnknownlocIter(mUnknownLocSet);
	      for (; UnknownlocIter.isValid(); ++UnknownlocIter) {
	         OA_ptr<Location> loc = UnknownlocIter.current();
	         sOutBuild->listItemStart();
	         loc->output(ir);
                 sOutBuild->listItemEnd();
              }
              sOutBuild->listEnd();
              sOutBuild->fieldEnd("mUnknownLocSet");
					       	
	}
    } //END OF NAMESPACE SIDEEFFECT
 } //END OF NAMESPACE OA     
