Useless nonterminals:

   Stmt


Terminals which are not used:

   T_STMTHANDLE
   T_OPHANDLE
   T_CONSTSYMHANDLE
   T_CONSTVALHANDLE
   T_FULL
   T_UNNAMEDLOC
   T_UNKNOWNLOC
   T_INVISIBLELOC
   T_LOCBASICSUBSET
   T_LOCIDXSUBSET


Useless rules:

#18    Stmt :	 T_STMTHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL ')';



Grammar
rule 1    @1 ->		/* empty */
rule 2    ProcDef -> Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'
rule 3    ParamDefList -> ParamDefList ParamDef
rule 4    ParamDefList ->		/* empty */
rule 5    ParamDef -> Sym T_MAPSTO '<' T_REFPARAM '=' BoolVal '>'
rule 6    BoolVal -> T_TRUE
rule 7    BoolVal -> T_FALSE
rule 8    CallsiteDefList -> CallsiteDefList CallsiteDef
rule 9    CallsiteDefList ->		/* empty */
rule 10   CallsiteDef -> Expr T_MAPSTO '<' T_CALLSITEPARAMS '=' '[' ExprList ']' '>'
rule 11   CallsiteParamDefList -> CallsiteParamDefList CallsiteParamDef
rule 12   CallsiteParamDefList ->		/* empty */
rule 13   CallsiteParamDef -> Expr T_MAPSTO '<' T_FORMAL '=' Sym ',' T_EXPRTREE '=' ExprTree '>'
rule 14   SymDefList -> SymDefList SymDef
rule 15   SymDefList ->		/* empty */
rule 16   SymDef -> Sym T_MAPSTO Location
rule 17   Proc -> T_PROCHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL ')'
rule 19   Sym -> T_SYMHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL ')'
rule 20   SymList -> SymList Sym
rule 21   SymList ->		/* empty */
rule 22   Expr -> T_EXPRHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL ')'
rule 23   ExprList -> ExprList Expr
rule 24   ExprList ->		/* empty */
rule 25   MemRef -> T_MEMREFHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL ')'
rule 26   ExprTree -> T_MEMREFNODE ',' '<' MemRef ',' T_CHILDREN '=' '[' ']' '>'
rule 27   Location -> T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'

Terminals, with rules where they appear

$ (-1)
'(' (40) 17 18 19 22 25
')' (41) 17 18 19 22 25
',' (44) 2 13 17 18 19 22 25 26 27
'<' (60) 2 5 10 13 26 27
'=' (61) 2 5 10 13 26 27
'>' (62) 2 5 10 13 26 27
'[' (91) 2 10 26 27
']' (93) 2 10 26 27
error (256)
T_STR_LITERAL (257) 17 18 19 22 25
T_INT_LITERAL (258) 17 18 19 22 25
T_TRUE (259) 6
T_FALSE (260) 7
T_PROCHANDLE (261) 17
T_STMTHANDLE (262) 18
T_SYMHANDLE (263) 19
T_MEMREFHANDLE (264) 25
T_EXPRHANDLE (265) 22
T_OPHANDLE (266)
T_CONSTSYMHANDLE (267)
T_CONSTVALHANDLE (268)
T_CHILDREN (269) 26
T_MEMREFNODE (270) 26
T_FULLOVERLAP (271) 27
T_PARTOVERLAP (272) 27
T_LOCAL (273) 27
T_FULL (274)
T_NAMEDLOC (275) 27
T_UNNAMEDLOC (276)
T_UNKNOWNLOC (277)
T_INVISIBLELOC (278)
T_LOCBASICSUBSET (279)
T_LOCIDXSUBSET (280)
T_MAPSTO (281) 2 5 10 13 16
T_SYMS (282) 2
T_PARAMS (283) 2
T_CALLSITES (284) 2
T_CALLSITEPARAMS (285) 10
T_CALLSITEPARAMINFO (286) 2
T_FORMAL (287) 13
T_EXPRTREE (288) 13
T_REFPARAM (289) 5

Nonterminals, with rules where they appear

ProcDef (44)
    on left: 2
@1 (45)
    on left: 1, on right: 2
ParamDefList (46)
    on left: 3 4, on right: 2 3
ParamDef (47)
    on left: 5, on right: 3
BoolVal (48)
    on left: 6 7, on right: 5 27
CallsiteDefList (49)
    on left: 8 9, on right: 2 8
CallsiteDef (50)
    on left: 10, on right: 8
CallsiteParamDefList (51)
    on left: 11 12, on right: 2 11
CallsiteParamDef (52)
    on left: 13, on right: 11
SymDefList (53)
    on left: 14 15, on right: 2 14
SymDef (54)
    on left: 16, on right: 14
Proc (55)
    on left: 17, on right: 2
Sym (56)
    on left: 19, on right: 5 13 16 20 27
SymList (57)
    on left: 20 21, on right: 20 27
Expr (58)
    on left: 22, on right: 10 13 23
ExprList (59)
    on left: 23 24, on right: 10 23
MemRef (60)
    on left: 25, on right: 26
ExprTree (61)
    on left: 26, on right: 13
Location (62)
    on left: 27, on right: 16


state 0

    T_PROCHANDLE	shift, and go to state 1

    ProcDef	go to state 122
    Proc	go to state 2



state 1

    Proc  ->  T_PROCHANDLE . '(' T_INT_LITERAL ',' T_STR_LITERAL ')'   (rule 17)

    '(' 	shift, and go to state 3



state 2

    ProcDef  ->  Proc . @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    $default	reduce using rule 1 (@1)

    @1  	go to state 4



state 3

    Proc  ->  T_PROCHANDLE '(' . T_INT_LITERAL ',' T_STR_LITERAL ')'   (rule 17)

    T_INT_LITERAL	shift, and go to state 5



state 4

    ProcDef  ->  Proc @1 . T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    T_MAPSTO	shift, and go to state 6



state 5

    Proc  ->  T_PROCHANDLE '(' T_INT_LITERAL . ',' T_STR_LITERAL ')'   (rule 17)

    ',' 	shift, and go to state 7



state 6

    ProcDef  ->  Proc @1 T_MAPSTO . '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    '<' 	shift, and go to state 8



state 7

    Proc  ->  T_PROCHANDLE '(' T_INT_LITERAL ',' . T_STR_LITERAL ')'   (rule 17)

    T_STR_LITERAL	shift, and go to state 9



state 8

    ProcDef  ->  Proc @1 T_MAPSTO '<' . T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    T_PARAMS	shift, and go to state 10



state 9

    Proc  ->  T_PROCHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL . ')'   (rule 17)

    ')' 	shift, and go to state 11



state 10

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS . '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    '=' 	shift, and go to state 12



state 11

    Proc  ->  T_PROCHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL ')' .   (rule 17)

    $default	reduce using rule 17 (Proc)



state 12

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' . '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    '[' 	shift, and go to state 13



state 13

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' . ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    $default	reduce using rule 4 (ParamDefList)

    ParamDefList	go to state 14



state 14

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList . ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)
    ParamDefList  ->  ParamDefList . ParamDef   (rule 3)

    T_SYMHANDLE	shift, and go to state 15
    ']' 	shift, and go to state 16

    ParamDef	go to state 17
    Sym 	go to state 18



state 15

    Sym  ->  T_SYMHANDLE . '(' T_INT_LITERAL ',' T_STR_LITERAL ')'   (rule 19)

    '(' 	shift, and go to state 19



state 16

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' . ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    ',' 	shift, and go to state 20



state 17

    ParamDefList  ->  ParamDefList ParamDef .   (rule 3)

    $default	reduce using rule 3 (ParamDefList)



state 18

    ParamDef  ->  Sym . T_MAPSTO '<' T_REFPARAM '=' BoolVal '>'   (rule 5)

    T_MAPSTO	shift, and go to state 21



state 19

    Sym  ->  T_SYMHANDLE '(' . T_INT_LITERAL ',' T_STR_LITERAL ')'   (rule 19)

    T_INT_LITERAL	shift, and go to state 22



state 20

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' . T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    T_CALLSITES	shift, and go to state 23



state 21

    ParamDef  ->  Sym T_MAPSTO . '<' T_REFPARAM '=' BoolVal '>'   (rule 5)

    '<' 	shift, and go to state 24



state 22

    Sym  ->  T_SYMHANDLE '(' T_INT_LITERAL . ',' T_STR_LITERAL ')'   (rule 19)

    ',' 	shift, and go to state 25



state 23

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES . '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    '=' 	shift, and go to state 26



state 24

    ParamDef  ->  Sym T_MAPSTO '<' . T_REFPARAM '=' BoolVal '>'   (rule 5)

    T_REFPARAM	shift, and go to state 27



state 25

    Sym  ->  T_SYMHANDLE '(' T_INT_LITERAL ',' . T_STR_LITERAL ')'   (rule 19)

    T_STR_LITERAL	shift, and go to state 28



state 26

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' . '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    '[' 	shift, and go to state 29



state 27

    ParamDef  ->  Sym T_MAPSTO '<' T_REFPARAM . '=' BoolVal '>'   (rule 5)

    '=' 	shift, and go to state 30



state 28

    Sym  ->  T_SYMHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL . ')'   (rule 19)

    ')' 	shift, and go to state 31



state 29

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' . CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    $default	reduce using rule 9 (CallsiteDefList)

    CallsiteDefList	go to state 32



state 30

    ParamDef  ->  Sym T_MAPSTO '<' T_REFPARAM '=' . BoolVal '>'   (rule 5)

    T_TRUE	shift, and go to state 33
    T_FALSE	shift, and go to state 34

    BoolVal	go to state 35



state 31

    Sym  ->  T_SYMHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL ')' .   (rule 19)

    $default	reduce using rule 19 (Sym)



state 32

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList . ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)
    CallsiteDefList  ->  CallsiteDefList . CallsiteDef   (rule 8)

    T_EXPRHANDLE	shift, and go to state 36
    ']' 	shift, and go to state 37

    CallsiteDef	go to state 38
    Expr	go to state 39



state 33

    BoolVal  ->  T_TRUE .   (rule 6)

    $default	reduce using rule 6 (BoolVal)



state 34

    BoolVal  ->  T_FALSE .   (rule 7)

    $default	reduce using rule 7 (BoolVal)



state 35

    ParamDef  ->  Sym T_MAPSTO '<' T_REFPARAM '=' BoolVal . '>'   (rule 5)

    '>' 	shift, and go to state 40



state 36

    Expr  ->  T_EXPRHANDLE . '(' T_INT_LITERAL ',' T_STR_LITERAL ')'   (rule 22)

    '(' 	shift, and go to state 41



state 37

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' . ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    ',' 	shift, and go to state 42



state 38

    CallsiteDefList  ->  CallsiteDefList CallsiteDef .   (rule 8)

    $default	reduce using rule 8 (CallsiteDefList)



state 39

    CallsiteDef  ->  Expr . T_MAPSTO '<' T_CALLSITEPARAMS '=' '[' ExprList ']' '>'   (rule 10)

    T_MAPSTO	shift, and go to state 43



state 40

    ParamDef  ->  Sym T_MAPSTO '<' T_REFPARAM '=' BoolVal '>' .   (rule 5)

    $default	reduce using rule 5 (ParamDef)



state 41

    Expr  ->  T_EXPRHANDLE '(' . T_INT_LITERAL ',' T_STR_LITERAL ')'   (rule 22)

    T_INT_LITERAL	shift, and go to state 44



state 42

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' . T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    T_CALLSITEPARAMINFO	shift, and go to state 45



state 43

    CallsiteDef  ->  Expr T_MAPSTO . '<' T_CALLSITEPARAMS '=' '[' ExprList ']' '>'   (rule 10)

    '<' 	shift, and go to state 46



state 44

    Expr  ->  T_EXPRHANDLE '(' T_INT_LITERAL . ',' T_STR_LITERAL ')'   (rule 22)

    ',' 	shift, and go to state 47



state 45

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO . '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    '=' 	shift, and go to state 48



state 46

    CallsiteDef  ->  Expr T_MAPSTO '<' . T_CALLSITEPARAMS '=' '[' ExprList ']' '>'   (rule 10)

    T_CALLSITEPARAMS	shift, and go to state 49



state 47

    Expr  ->  T_EXPRHANDLE '(' T_INT_LITERAL ',' . T_STR_LITERAL ')'   (rule 22)

    T_STR_LITERAL	shift, and go to state 50



state 48

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' . '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    '[' 	shift, and go to state 51



state 49

    CallsiteDef  ->  Expr T_MAPSTO '<' T_CALLSITEPARAMS . '=' '[' ExprList ']' '>'   (rule 10)

    '=' 	shift, and go to state 52



state 50

    Expr  ->  T_EXPRHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL . ')'   (rule 22)

    ')' 	shift, and go to state 53



state 51

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' . CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    $default	reduce using rule 12 (CallsiteParamDefList)

    CallsiteParamDefList	go to state 54



state 52

    CallsiteDef  ->  Expr T_MAPSTO '<' T_CALLSITEPARAMS '=' . '[' ExprList ']' '>'   (rule 10)

    '[' 	shift, and go to state 55



state 53

    Expr  ->  T_EXPRHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL ')' .   (rule 22)

    $default	reduce using rule 22 (Expr)



state 54

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList . ']' ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)
    CallsiteParamDefList  ->  CallsiteParamDefList . CallsiteParamDef   (rule 11)

    T_EXPRHANDLE	shift, and go to state 36
    ']' 	shift, and go to state 56

    CallsiteParamDef	go to state 57
    Expr	go to state 58



state 55

    CallsiteDef  ->  Expr T_MAPSTO '<' T_CALLSITEPARAMS '=' '[' . ExprList ']' '>'   (rule 10)

    $default	reduce using rule 24 (ExprList)

    ExprList	go to state 59



state 56

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' . ',' T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    ',' 	shift, and go to state 60



state 57

    CallsiteParamDefList  ->  CallsiteParamDefList CallsiteParamDef .   (rule 11)

    $default	reduce using rule 11 (CallsiteParamDefList)



state 58

    CallsiteParamDef  ->  Expr . T_MAPSTO '<' T_FORMAL '=' Sym ',' T_EXPRTREE '=' ExprTree '>'   (rule 13)

    T_MAPSTO	shift, and go to state 61



state 59

    CallsiteDef  ->  Expr T_MAPSTO '<' T_CALLSITEPARAMS '=' '[' ExprList . ']' '>'   (rule 10)
    ExprList  ->  ExprList . Expr   (rule 23)

    T_EXPRHANDLE	shift, and go to state 36
    ']' 	shift, and go to state 62

    Expr	go to state 63



state 60

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' . T_SYMS '=' '[' SymDefList ']' '>'   (rule 2)

    T_SYMS	shift, and go to state 64



state 61

    CallsiteParamDef  ->  Expr T_MAPSTO . '<' T_FORMAL '=' Sym ',' T_EXPRTREE '=' ExprTree '>'   (rule 13)

    '<' 	shift, and go to state 65



state 62

    CallsiteDef  ->  Expr T_MAPSTO '<' T_CALLSITEPARAMS '=' '[' ExprList ']' . '>'   (rule 10)

    '>' 	shift, and go to state 66



state 63

    ExprList  ->  ExprList Expr .   (rule 23)

    $default	reduce using rule 23 (ExprList)



state 64

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS . '=' '[' SymDefList ']' '>'   (rule 2)

    '=' 	shift, and go to state 67



state 65

    CallsiteParamDef  ->  Expr T_MAPSTO '<' . T_FORMAL '=' Sym ',' T_EXPRTREE '=' ExprTree '>'   (rule 13)

    T_FORMAL	shift, and go to state 68



state 66

    CallsiteDef  ->  Expr T_MAPSTO '<' T_CALLSITEPARAMS '=' '[' ExprList ']' '>' .   (rule 10)

    $default	reduce using rule 10 (CallsiteDef)



state 67

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' . '[' SymDefList ']' '>'   (rule 2)

    '[' 	shift, and go to state 69



state 68

    CallsiteParamDef  ->  Expr T_MAPSTO '<' T_FORMAL . '=' Sym ',' T_EXPRTREE '=' ExprTree '>'   (rule 13)

    '=' 	shift, and go to state 70



state 69

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' . SymDefList ']' '>'   (rule 2)

    $default	reduce using rule 15 (SymDefList)

    SymDefList	go to state 71



state 70

    CallsiteParamDef  ->  Expr T_MAPSTO '<' T_FORMAL '=' . Sym ',' T_EXPRTREE '=' ExprTree '>'   (rule 13)

    T_SYMHANDLE	shift, and go to state 15

    Sym 	go to state 72



state 71

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList . ']' '>'   (rule 2)
    SymDefList  ->  SymDefList . SymDef   (rule 14)

    T_SYMHANDLE	shift, and go to state 15
    ']' 	shift, and go to state 73

    SymDef	go to state 74
    Sym 	go to state 75



state 72

    CallsiteParamDef  ->  Expr T_MAPSTO '<' T_FORMAL '=' Sym . ',' T_EXPRTREE '=' ExprTree '>'   (rule 13)

    ',' 	shift, and go to state 76



state 73

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' . '>'   (rule 2)

    '>' 	shift, and go to state 77



state 74

    SymDefList  ->  SymDefList SymDef .   (rule 14)

    $default	reduce using rule 14 (SymDefList)



state 75

    SymDef  ->  Sym . T_MAPSTO Location   (rule 16)

    T_MAPSTO	shift, and go to state 78



state 76

    CallsiteParamDef  ->  Expr T_MAPSTO '<' T_FORMAL '=' Sym ',' . T_EXPRTREE '=' ExprTree '>'   (rule 13)

    T_EXPRTREE	shift, and go to state 79



state 77

    ProcDef  ->  Proc @1 T_MAPSTO '<' T_PARAMS '=' '[' ParamDefList ']' ',' T_CALLSITES '=' '[' CallsiteDefList ']' ',' T_CALLSITEPARAMINFO '=' '[' CallsiteParamDefList ']' ',' T_SYMS '=' '[' SymDefList ']' '>' .   (rule 2)

    $default	reduce using rule 2 (ProcDef)



state 78

    SymDef  ->  Sym T_MAPSTO . Location   (rule 16)

    T_NAMEDLOC	shift, and go to state 80

    Location	go to state 81



state 79

    CallsiteParamDef  ->  Expr T_MAPSTO '<' T_FORMAL '=' Sym ',' T_EXPRTREE . '=' ExprTree '>'   (rule 13)

    '=' 	shift, and go to state 82



state 80

    Location  ->  T_NAMEDLOC . ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    ',' 	shift, and go to state 83



state 81

    SymDef  ->  Sym T_MAPSTO Location .   (rule 16)

    $default	reduce using rule 16 (SymDef)



state 82

    CallsiteParamDef  ->  Expr T_MAPSTO '<' T_FORMAL '=' Sym ',' T_EXPRTREE '=' . ExprTree '>'   (rule 13)

    T_MEMREFNODE	shift, and go to state 84

    ExprTree	go to state 85



state 83

    Location  ->  T_NAMEDLOC ',' . '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    '<' 	shift, and go to state 86



state 84

    ExprTree  ->  T_MEMREFNODE . ',' '<' MemRef ',' T_CHILDREN '=' '[' ']' '>'   (rule 26)

    ',' 	shift, and go to state 87



state 85

    CallsiteParamDef  ->  Expr T_MAPSTO '<' T_FORMAL '=' Sym ',' T_EXPRTREE '=' ExprTree . '>'   (rule 13)

    '>' 	shift, and go to state 88



state 86

    Location  ->  T_NAMEDLOC ',' '<' . Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    T_SYMHANDLE	shift, and go to state 15

    Sym 	go to state 89



state 87

    ExprTree  ->  T_MEMREFNODE ',' . '<' MemRef ',' T_CHILDREN '=' '[' ']' '>'   (rule 26)

    '<' 	shift, and go to state 90



state 88

    CallsiteParamDef  ->  Expr T_MAPSTO '<' T_FORMAL '=' Sym ',' T_EXPRTREE '=' ExprTree '>' .   (rule 13)

    $default	reduce using rule 13 (CallsiteParamDef)



state 89

    Location  ->  T_NAMEDLOC ',' '<' Sym . ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    ',' 	shift, and go to state 91



state 90

    ExprTree  ->  T_MEMREFNODE ',' '<' . MemRef ',' T_CHILDREN '=' '[' ']' '>'   (rule 26)

    T_MEMREFHANDLE	shift, and go to state 92

    MemRef	go to state 93



state 91

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' . T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    T_LOCAL	shift, and go to state 94



state 92

    MemRef  ->  T_MEMREFHANDLE . '(' T_INT_LITERAL ',' T_STR_LITERAL ')'   (rule 25)

    '(' 	shift, and go to state 95



state 93

    ExprTree  ->  T_MEMREFNODE ',' '<' MemRef . ',' T_CHILDREN '=' '[' ']' '>'   (rule 26)

    ',' 	shift, and go to state 96



state 94

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL . '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    '=' 	shift, and go to state 97



state 95

    MemRef  ->  T_MEMREFHANDLE '(' . T_INT_LITERAL ',' T_STR_LITERAL ')'   (rule 25)

    T_INT_LITERAL	shift, and go to state 98



state 96

    ExprTree  ->  T_MEMREFNODE ',' '<' MemRef ',' . T_CHILDREN '=' '[' ']' '>'   (rule 26)

    T_CHILDREN	shift, and go to state 99



state 97

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' . BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    T_TRUE	shift, and go to state 33
    T_FALSE	shift, and go to state 34

    BoolVal	go to state 100



state 98

    MemRef  ->  T_MEMREFHANDLE '(' T_INT_LITERAL . ',' T_STR_LITERAL ')'   (rule 25)

    ',' 	shift, and go to state 101



state 99

    ExprTree  ->  T_MEMREFNODE ',' '<' MemRef ',' T_CHILDREN . '=' '[' ']' '>'   (rule 26)

    '=' 	shift, and go to state 102



state 100

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal . ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    ',' 	shift, and go to state 103



state 101

    MemRef  ->  T_MEMREFHANDLE '(' T_INT_LITERAL ',' . T_STR_LITERAL ')'   (rule 25)

    T_STR_LITERAL	shift, and go to state 104



state 102

    ExprTree  ->  T_MEMREFNODE ',' '<' MemRef ',' T_CHILDREN '=' . '[' ']' '>'   (rule 26)

    '[' 	shift, and go to state 105



state 103

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' . T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    T_FULLOVERLAP	shift, and go to state 106



state 104

    MemRef  ->  T_MEMREFHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL . ')'   (rule 25)

    ')' 	shift, and go to state 107



state 105

    ExprTree  ->  T_MEMREFNODE ',' '<' MemRef ',' T_CHILDREN '=' '[' . ']' '>'   (rule 26)

    ']' 	shift, and go to state 108



state 106

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP . '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    '=' 	shift, and go to state 109



state 107

    MemRef  ->  T_MEMREFHANDLE '(' T_INT_LITERAL ',' T_STR_LITERAL ')' .   (rule 25)

    $default	reduce using rule 25 (MemRef)



state 108

    ExprTree  ->  T_MEMREFNODE ',' '<' MemRef ',' T_CHILDREN '=' '[' ']' . '>'   (rule 26)

    '>' 	shift, and go to state 110



state 109

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' . '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    '[' 	shift, and go to state 111



state 110

    ExprTree  ->  T_MEMREFNODE ',' '<' MemRef ',' T_CHILDREN '=' '[' ']' '>' .   (rule 26)

    $default	reduce using rule 26 (ExprTree)



state 111

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' . SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    $default	reduce using rule 21 (SymList)

    SymList	go to state 112



state 112

    SymList  ->  SymList . Sym   (rule 20)
    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList . ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    T_SYMHANDLE	shift, and go to state 15
    ']' 	shift, and go to state 113

    Sym 	go to state 114



state 113

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' . ',' T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    ',' 	shift, and go to state 115



state 114

    SymList  ->  SymList Sym .   (rule 20)

    $default	reduce using rule 20 (SymList)



state 115

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' . T_PARTOVERLAP '=' '[' SymList ']' '>'   (rule 27)

    T_PARTOVERLAP	shift, and go to state 116



state 116

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP . '=' '[' SymList ']' '>'   (rule 27)

    '=' 	shift, and go to state 117



state 117

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' . '[' SymList ']' '>'   (rule 27)

    '[' 	shift, and go to state 118



state 118

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' . SymList ']' '>'   (rule 27)

    $default	reduce using rule 21 (SymList)

    SymList	go to state 119



state 119

    SymList  ->  SymList . Sym   (rule 20)
    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList . ']' '>'   (rule 27)

    T_SYMHANDLE	shift, and go to state 15
    ']' 	shift, and go to state 120

    Sym 	go to state 114



state 120

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' . '>'   (rule 27)

    '>' 	shift, and go to state 121



state 121

    Location  ->  T_NAMEDLOC ',' '<' Sym ',' T_LOCAL '=' BoolVal ',' T_FULLOVERLAP '=' '[' SymList ']' ',' T_PARTOVERLAP '=' '[' SymList ']' '>' .   (rule 27)

    $default	reduce using rule 27 (Location)



state 122

    $   	go to state 123



state 123

    $   	go to state 124



state 124

    $default	accept
